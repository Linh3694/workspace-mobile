name: Build APK

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: false
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major
  push:
    tags:
      - 'v*'

jobs:
  build-apk:
    name: Build Android APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Auto increment version (if triggered manually)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          VERSION_TYPE="${{ github.event.inputs.version_type || 'patch' }}"
          echo "🔄 Bumping version: $VERSION_TYPE"
          NEW_VERSION=$(node scripts/update-version.js $VERSION_TYPE)
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Setup EAS CLI
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Fix MSAL dependency issue
        run: npm run fix-msal

      - name: Build APK
        run: eas build --platform android --profile production --non-interactive --wait
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Get build info and download APK
        run: |
          # Lấy thông tin build mới nhất
          BUILD_INFO=$(eas build:list --platform android --limit 1 --json)
          BUILD_URL=$(echo $BUILD_INFO | jq -r '.[0].artifacts.buildUrl')
          BUILD_ID=$(echo $BUILD_INFO | jq -r '.[0].id')
          
          echo "Build ID: $BUILD_ID"
          echo "Build URL: $BUILD_URL"
          
          # Tải APK với tên có version
          VERSION="${NEW_VERSION:-v${{ github.run_number }}}"
          curl -L -o "wiswork-$VERSION.apk" "$BUILD_URL"
          
          # Kiểm tra file đã tải
          ls -la *.apk
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: wiswork-apk-${{ env.NEW_VERSION || github.run_number }}
          path: "*.apk"
          retention-days: 90

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_VERSION || format('v{0}', github.run_number) }}
          name: Wiswork ${{ env.NEW_VERSION || format('v{0}', github.run_number) }}
          body: |
            ## 📱 Wiswork - Phiên bản ${{ env.NEW_VERSION || format('v{0}', github.run_number) }}
            
            ### 🚀 Tính năng mới
            - Build tự động từ GitHub Actions
            - Commit: ${{ github.sha }}
            - Version: ${{ env.NEW_VERSION || 'auto-generated' }}
            
            ### 📥 Tải về
            Tải file APK từ phần **Assets** bên dưới để cài đặt trên Android.
            
            ### 📋 Hướng dẫn cài đặt
            1. Tải file `.apk` về máy
            2. Bật "Cài đặt từ nguồn không xác định" trong Settings
            3. Mở file APK để cài đặt
            
          files: "*.apk"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 