name: Build và Deploy Android App

on:
  push:
    branches: [android]
  pull_request:
    branches: [android]
  workflow_dispatch:
    inputs:
      submit_to_store:
        description: 'Submit to Google Play'
        required: false
        default: false
        type: boolean
      version_type:
        description: 'Version bump type'
        required: false
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      release_track:
        description: 'Google Play release track'
        required: false
        default: 'internal'
        type: choice
        options:
          - internal
          - alpha
          - beta
          - production

permissions:
  contents: write
  actions: read

jobs:
  version-bump:
    name: Auto Version Bump
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/android' }}
    outputs:
      new_version: ${{ steps.version.outputs.new_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Auto increment version
        id: version
        run: |
          # Determine version type based on commit message or manual input
          VERSION_TYPE="${{ github.event.inputs.version_type || 'patch' }}"

          # Check if commit message contains version bump keywords
          if git log -1 --pretty=%B | grep -i "breaking change\|major"; then
            VERSION_TYPE="major"
          elif git log -1 --pretty=%B | grep -i "feat\|feature\|minor"; then
            VERSION_TYPE="minor"
          fi

          echo "Bumping version: $VERSION_TYPE"

          # Run version update script and capture new version
          NEW_VERSION=$(node scripts/update-version.js $VERSION_TYPE)
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"

          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Commit version changes
          if git diff --quiet app.json package.json; then
            echo "No version changes to commit"
          else
            git add app.json package.json
            git commit -m "🔖 Auto bump version to $NEW_VERSION [skip ci]"
            git push origin ${{ github.ref_name }}
            echo "Version changes committed and pushed"
          fi

  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: version-bump
    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets."
            echo "Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: npm ci

      - name: Build Android App Bundle (AAB)
        run: eas build --platform android --non-interactive --wait --profile production
        timeout-minutes: 60
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Submit to Google Play Console
        if: ${{ github.event.inputs.submit_to_store == 'true' || github.ref == 'refs/heads/android' }}
        run: |
          eas submit --platform android \
            --latest \
            --non-interactive \
            --profile production
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Download built AAB for artifacts
        if: always()
        run: |
          # Download the built AAB file from EAS
          eas build:list --platform android --limit 1 --json | jq -r '.[0].artifacts.buildUrl' | xargs -I {} wget -O android-app.aab {}
        continue-on-error: true

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-aab-v${{ needs.version-bump.outputs.new_version || github.run_number }}
          path: '*.aab'
          retention-days: 30
        continue-on-error: true

      - name: Create Release
        if: ${{ github.ref == 'refs/heads/android' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.version-bump.outputs.new_version || github.run_number }}
          name: Wiswork Android v${{ needs.version-bump.outputs.new_version || github.run_number }}
          body: |
            🚀 Phiên bản mới của ứng dụng Wiswork Android v${{ needs.version-bump.outputs.new_version }}

            ### 📝 Thay đổi
            - Build tự động từ commit: ${{ github.sha }}
            - Version được tự động cập nhật: ${{ needs.version-bump.outputs.new_version }}
            - Sử dụng Android App Bundle (AAB) thay vì APK
            - Tự động submit lên Google Play Store

            ### 📥 Tải về
            - **Android AAB**: Xem trong Assets bên dưới
            - **Google Play Store**: Ứng dụng sẽ có sẵn trên Play Store sau khi được duyệt

            ### 📋 Lưu ý
            - File AAB được tối ưu hóa cho Google Play Store
            - Kích thước nhỏ hơn và hiệu suất tốt hơn so với APK
            - App sẽ tự động cập nhật thông qua Play Store

          files: '*.aab'
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    name: Thông báo kết quả
    runs-on: ubuntu-latest
    needs: [version-bump, build-android]
    if: always()
    steps:
      - name: Notify success
        if: ${{ needs.build-android.result == 'success' }}
        run: |
          echo "✅ Build Android thành công!"
          echo "📦 AAB (Android App Bundle) đã được tạo và submit lên Google Play"
          echo "🔖 Version mới: ${{ needs.version-bump.outputs.new_version }}"
          echo "🚀 App sẽ có sẵn trên Google Play Store sau khi được duyệt"

      - name: Notify failure
        if: ${{ needs.build-android.result == 'failure' }}
        run: |
          echo "❌ Build Android thất bại!"
          echo "Android status: ${{ needs.build-android.result }}"
